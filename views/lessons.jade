extends layout
	
block content
	h1= title

	#instructions.col-sm-12.col-md-6

	#exercises.col-sm-12.col-md-6
		#editor-panels
				ul#editor-tabs.nav.nav-tabs
				#editor-buffers.tab-content

		#exercise-links.btn-toolbar
			.btn-group
				button.btn.btn-default 提示

			.btn-group.pull-right
				button#commit.btn.btn-success(title="修改代码后再尝试提交") 提交
				button.btn.btn-default 下一个

		#output-panels
			ul.nav.nav-tabs
				li.active
					a(data-target="console") 控制台
			.tab-content
				.tab-pane.fade.active.in#console
					pre
	link(rel='stylesheet', href='/javascripts/codemirror/lib/codemirror.css', media="all")
	link(rel='stylesheet', href='/javascripts/codemirror/theme/solarized.css', media="all")
	script(type="text/javascript", src="/javascripts/codemirror/lib/codemirror.js")
	script(type="text/javascript", src="/javascripts/codemirror/addon/mode/loadmode.js")
	script(type="text/javascript", src="/javascripts/codemirror/mode/meta.js")
	script(type='text/javascript').
		var exercises = JSON.parse( !{JSON.stringify(exedb)} );
		var mimelookup = {
			".c":"text/x-csrc",
			".h":"text/x-csrc",
			".cpp":"text/x-c++src",
			".hpp":"text/x-c++src",
			".css":"text/css",
			".java":"text/x-java",
			".js":"text/javascript",
			".json":"application/x-json",
			".html":"text/html",
			".md":"text/x-markdown",
			".lua":"text/x-lua"
		}

		function getMode(filename)
		{
			var ext = /\.[^.\\/]+$/.exec(filename);
			var mime = null
			if (!ext)
				return null

			mime = mimelookup[ext]

			if (!mime)
				return null

			for (var i = 0; i < CodeMirror.modeInfo.length; i++)
			{
				if (CodeMirror.modeInfo[i].mime == mime)
					return CodeMirror.modeInfo[i];
			}
			return null
		}


		var sources = []
		// 
		$('#instructions')
			.append('<h1>'+exercises[0].title+'</h1>')
			.append(exercises[0].instructions)

		// editors
		var current = 0 // current editor index
		var files = exercises[0].files
		for (var i=0;i <files.length; i++){
			var file = files[i]
			var id = "editor-buffer-"+i
			sources.push({name:file.name})
			$('#editor-tabs').append("<li><a data-target=\"#"+id+"\">"+file.name+"</a></li>")
			$('#editor-buffers').append(
				"<div id=\""+id+"\" class=\"tab-pane fade\"><textarea class=\"editor\">"+file.initial_value+"</textarea></div>"
			)
		}

		$('#editor-tabs :first-child').addClass('active')
		$('#editor-buffers :first-child').addClass('active in')
		$(".nav-tabs a").click(function(e){
			$(this).tab('show');
			current = $(this).attr('data-target').match(/\d+/);
		})
		var editors = []
		CodeMirror.modeURL = "/javascripts/codemirror/mode/%N/%N.js";
		$(".editor").each(function(index){
			var editor = CodeMirror.fromTextArea(this, {lineNumbers:true, theme:"solarized dark"});
			var mi = getMode(files[index].name);
			if (mi){
				CodeMirror.autoLoadMode(editor, mi.mode);
				editor.setOption('mode', mi.mime);
			}
			editors.push(editor);
		});

		var posted = false;
		$('#commit').click(function(){
			if (posted)
				return;
			posted = true;

			for (var i = 0; i < editors.length; i++)
			{
				sources[i].content = editors[i].getDoc().getValue()
			}

			$.post('/build', {sources:sources}, function(res){
				$('#console pre').append(res.outputs);
				posted = false;
			})
		});
